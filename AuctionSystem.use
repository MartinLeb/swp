model AuctionSystem

enum CommandWords {
	login, save
}

enum AuctionWords {
	bid, joinAuction, createAuction
}

abstract class Agent
	operations
		send(m:Message) : Boolean
end

class AuctioneerAgent < Agent
	attributes
		name : String
		id : Integer
end

class AuctionAgent < Agent
	attributes
		startDate : Integer
		endDate : Integer
end

class SearchAgent < Agent

end

class BidAgent < Agent

end

class UserAgent < Agent

end

class RegisteredUserAgent < UserAgent

end

abstract class Message

end

class RegisterMessage < Message
	attributes
		name : String
		password : String
		email : String
end

abstract class AuctionBehavior

end

aggregation AuctionHasBehavior
	between
		AuctionAgent[1]
		AuctionBehavior[1]
end

association AuctioneerManagesAuctions
	between
		AuctioneerAgent[1]
		AuctionAgent[*]
end

class EnglishAuctionBehavior < AuctionBehavior

end

class DutchAuctionBehavior < AuctionBehavior

end

abstract class Category
	attributes
		name : String
		id : Integer
end

class AuctionObject
	attributes
		name : String
		description : String
end

aggregation AuctionObjectHasCategory
	between
		AuctionObject[*]
		Category[1]
end

abstract class BidStrategy

end

class OneTimeBidStrategy < BidStrategy

end

class PeriodicBidStrategy < BidStrategy

end
